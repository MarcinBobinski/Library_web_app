plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.palantir.docker-run' version '0.34.0'
    id 'com.github.sherter.google-java-format' version '0.9'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.3'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.7.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.3'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Postgresql
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.3'
    runtimeOnly 'org.postgresql:postgresql:42.4.2'

    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.3'
    testImplementation 'org.springframework.security:spring-security-test:5.7.3'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

tasks.named('test') {
    useJUnitPlatform()
}

dockerRun {
    name 'postgresql-library'
    image 'postgres'
    volumes 'docker/postgresql/init.sql':'/docker-entrypoint-initdb.d/init.sql:ro'
    ports '5432:5432'
    env 'POSTGRES_DB': 'library', 'POSTGRES_PASSWORD': 'admin123', 'POSTGRES_USER': 'admin'
    daemonize true
    arguments '--restart=always'
}

googleJavaFormat {
    options style: 'GOOGLE'
}
